Exploit:
- It is possible to spam the pathcache table from outside: If you call a page id with &no_cache=1 and incrementing &L, pages will be generated with the &L variable in the links and the pathcache table is filled with bogus entries. Maybe the same with encodecache. Possible solution: To check L against sys_language table. Or for encode cache, only use it when &no_cache is not used. (or totally disable &no_cache parameter!)

Todo:
- backend:
	- pathCache for non-existing pages??? / improve the warning enough to show _true_ problems (which languages is not really...)
	- encode/decode cache totals displayed (number)
	- cHash clear-cache function.
- Make sure that pathCache entries will always be unique (add -0 if not) and consider
- (High!) Implement path-expire-time so OLD urls referenced from outside will work for a while... ["expireDays" setting...] [Sponsorship by Lars Houmark?]
- (High!) Update documentation feature list + screenshot for introduction.


- Backend module: Add CSH / Skinning / XHTML and getLL()
- Required-GETvars on postVarSets... (instead of taking the postVarSet if just a SINGLE Getvar matches...?)
- NA value / null setting
